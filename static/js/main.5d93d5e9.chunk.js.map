{"version":3,"sources":["cases.js","index.js"],"names":["case0","stationTitle","stemText","patient","options","Migraine","Tension-type headache","Cluster headache","Meningitis","Subarachnoid haemorrhage","Epidural haemorrhage","Subdural haemorrhage","Temporal arteritis","Idiopathic intracranial hypertension","Medication-overuse headache","Brain tumour","Carotid dissection","Sinusitis","Encephalitis","numHitsRequired","case1","case2","case3","ItemList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","makeSubheader","bind","assertThisInitialized","item","react_default","a","createElement","ListItem_default","key","ListItemIcon_default","icon","ListItemText_default","primary","ListSubheader_default","subheader","List_default","dense","items","map","makeItem","Component","ShowOptionList","numHits","src_OptionList","itemObject","handleClick","Array","prototype","diff","filter","i","indexOf","OptionList","_this2","state","index","_this3","button","onClick","secondary","keys","renderListItem","MainFrame","_this4","hits","attempts","input","invalidInput","case","stationNo","notifyHits","toast","info","e","setState","target","value","length","_this5","preventDefault","current_hits","toLowerCase","includes","x","prevState","toConsumableArray","concat","_this6","className","onSubmit","onEnterText","TextField_default","error","onChange","onChangeText","Button_default","onKeyPress","ev","Grid_default","container","spacing","xs","md","src_ItemList","Done_default","Search_default","src_ShowOptionList","App","_this7","caseArray","dones","codewords","cases","notifyDone","makeTab","makeFrame","handleClicks","num","word","console","log","update","defineProperty","$set","esm","toString","toUpperCase","src_MainFrame","_this8","lib","autoClose","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"odAAaA,EAAQ,CACjBC,aAAc,iBACdC,SAAU,wEACVC,QAAS,CACL,uDACA,+BACA,mCACA,8DACA,wCACA,sEACA,gBACA,+BACA,wEACA,6EACA,SACA,WACA,8BACA,WACA,wDACA,uEACA,uBACA,wEACA,qCACA,2EAEJC,QAAS,CACLC,SAAU,UACVC,wBAAyB,YACzBC,mBAAoB,aACpBC,WAAY,WACZC,2BAA4B,QAC5BC,uBAAwB,QACxBC,uBAAwB,SACxBC,qBAAsB,UACtBC,uCAAwC,SACxCC,8BAA+B,UAC/BC,eAAgB,QAChBC,qBAAsB,SACtBC,UAAW,QACXC,aAAc,WAElBC,gBAAiB,IAGRC,EAAQ,CACjBnB,aAAc,eACdC,SAAU,2EACVC,QAAS,CACX,2DACA,wCACA,qCACA,qBACA,yEACA,oDACA,wGACA,yFACE,sEACF,0CACA,4FACA,8CACA,mFACA,uBACA,SACA,WACA,iGACA,wEACA,yCACA,0BACA,2BACA,0BACA,iCAEEC,QAAS,CACLC,SAAU,QACVC,wBAAyB,MACzBC,mBAAoB,WACpBC,WAAY,aACZC,2BAA4B,QAC5BC,uBAAwB,QACxBC,uBAAwB,SACxBC,qBAAsB,YACtBC,uCAAwC,SACxCC,8BAA+B,QAC/BC,eAAgB,WAChBC,qBAAsB,OACtBC,UAAW,SACXC,aAAc,SAElBC,gBAAiB,IAGRE,EAAQ,CACjBpB,aAAc,kBACdC,SAAU,uEACVC,QAAS,CACL,+CACA,uBACA,sCACA,qBACA,2CACA,wCACA,wFACA,kFACA,mGACA,oCACA,oBACA,gCACA,yCACA,kFACA,oCACA,uCACA,wEACA,+BACA,gEAEJC,QAAS,CACLC,SAAU,UACVC,wBAAyB,UACzBC,mBAAoB,UACpBC,WAAY,SACZC,2BAA4B,UAC5BC,uBAAwB,YACxBC,uBAAwB,SACxBC,qBAAsB,SACtBC,uCAAwC,WACxCC,8BAA+B,WAC/BC,eAAgB,SAChBC,qBAAsB,YACtBC,UAAW,aACXC,aAAc,cAElBC,gBAAiB,IAGRG,EAAQ,CACjBrB,aAAc,YACdC,SAAU,kEACVC,QAAS,CACX,0DACA,qBACA,0B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","file":"static/js/main.5d93d5e9.chunk.js","sourcesContent":["export const case0 = {\n    stationTitle: \"Margaret Smith\",\n    stemText: \"Margaret Smith is a 55 year old lady who has come in with a headache.\",\n    patient: [\n        \"Where: one side, unilateral, at the back of the head\",\n        \"When: one hour ago, recently\",\n        \"quality: distressing thunderclap\",\n        \"quantity, rate out of 10, severity: 10/10, worst in my life\",\n        \"alleviating (relieving, better): none\",\n        \"aggravating (exacerbating, worse): lights, photophobic, photophobia\",\n        \"beliefs: none\",\n        \"concerns: am I going to die?\",\n        \"mother had autosomal polycystic kidney disease (renal disease, adpkd)\",\n        \"family history/family hx: I'm not sure but if you specified some things...\",\n        \"nausea\",\n        \"vomiting\",\n        \"neck stiff (neck stiffness)\",\n        \"diplopia\",\n        \"high blood pressure (hypertension, HTN), 150/80 today\",\n        \"lost consciousness (loss of consciousness, loc) momentarily at start\",\n        \"confused (confusion)\",\n        \"smoke cigarettes 10 packs per day for past 20 years (smoked, smoking)\",\n        \"occupation: primary school teacher\",\n        \"eye movement/movements on looking to the left: left eye does not abduct\"\n    ],\n    options: {\n        Migraine: \"pikachu\",\n        \"Tension-type headache\": \"bulbasaur\",\n        \"Cluster headache\": \"charmander\",\n        Meningitis: \"squirtle\",\n        \"Subarachnoid haemorrhage\": \"golem\",\n        \"Epidural haemorrhage\": \"zubat\",\n        \"Subdural haemorrhage\": \"pidgey\",\n        \"Temporal arteritis\": \"spearow\",\n        \"Idiopathic intracranial hypertension\": \"grimer\",\n        \"Medication-overuse headache\": \"koffing\",\n        \"Brain tumour\": \"ekans\",\n        \"Carotid dissection\": \"meowth\",\n        Sinusitis: \"eevee\",\n        Encephalitis: \"porygon\"\n    },\n    numHitsRequired: 12\n}\n\nexport const case1 = {\n    stationTitle: \"John Jameson\",\n    stemText: \"John Jameson is a 35 year old man who has come to discuss his headaches.\",\n    patient: [\n  \"where: one side, unilateral, at the front behind the eye\",\n  \"when: happened 2:00am today, gone now\",\n  \"rapid onset peaking within minutes\",\n  \"two hours duration\",\n  \"has happened before, usually around 2:00am every day for several years\",\n  \"quality: excruciating, sharp, piercing, pulsating\",\n  \"quantity, rate out of 10, severity: 10/10, worst in my life, has made me want to end it all sometimes\",\n  \"alleviating (relieving, better): banging my head on the wall and pacing back and forth\",\n    \"aggravating (exacerbating, worse): lights, photophobic, photophobia\",\n  \"triggers/triggered by alcohol sometimes\",\n  \"past medical history (past history) of trauma/concussion in football game five years back\",\n  \"beliefs: I think I get really bad migraines\",\n  \"concerns: Doc, if it goes on any longer, I'm going to off myself. It's that bad!\",\n  \"family: I'm not sure\",\n  \"nausea\",\n  \"vomiting\",\n  \"drinking/alcohol: 2 standard drinks a day, sometimes I go out binge drinking at parties though\",\n  \"smoke cigarettes 10 packs per day for past 20 years (smoked, smoking)\",\n  \"lacrimation, runny eyes, crying, teary\",\n  \"rhinorrhoea, runny nose\",\n  \"occupation: truck driver\",\n  \"autonomic: be specific.\",\n  \"nasal congestion, stuffy nose\"\n],\n    options: {\n        Migraine: \"harry\",\n        \"Tension-type headache\": \"ron\",\n        \"Cluster headache\": \"hermione\",\n        Meningitis: \"dumbledore\",\n        \"Subarachnoid haemorrhage\": \"snape\",\n        \"Epidural haemorrhage\": \"lupin\",\n        \"Subdural haemorrhage\": \"sirius\",\n        \"Temporal arteritis\": \"voldemort\",\n        \"Idiopathic intracranial hypertension\": \"malfoy\",\n        \"Medication-overuse headache\": \"dobby\",\n        \"Brain tumour\": \"umbridge\",\n        \"Carotid dissection\": \"fred\",\n        Sinusitis: \"george\",\n        Encephalitis: \"percy\"\n    },\n    numHitsRequired: 10\n}\n\nexport const case2 = {\n    stationTitle: \"Gertrud de Smit\",\n    stemText: \"Gertrud de Smit is a 62 year old woman who has come with a headache.\",\n    patient: [\n        \"where: unilateral, near temple on right side\",\n        \"when: five hours ago\",\n        \"has not happened before in the past\",\n        \"quality: pulsating\",\n        \"quantity, rate out of 10, severity: 7/10\",\n        \"alleviating (relieving, better): none\",\n        \"aggravating (exacerbating, worse): seems tender on touching my scalp/scalp tenderness\",\n        \"past medical history (past history): not sure but if you ask me specifically...\",\n        \"ischaemic heart disease / heart attack / myocardial infarction / acute coronary syndrome / stemi\",\n        \"shoulder pain / pain in shoulders\",\n        \"beliefs: not sure\",\n        \"low-grade fever / temperature\",\n        \"concerns: I just want it to get better\",\n        \"visual changes/vision: noticed that I can't seem to see as much on my right eye\",\n        \"jaw claudication: pain on chewing\",\n        \"family: mom was from the Netherlands\",\n        \"smoke cigarettes 10 packs per day for past 20 years (smoked, smoking)\",\n        \"temporal artery absent pulse\",\n        \"funduscopy / ophthalmoscopy: pallor and oedema of optic disc\"\n    ],\n    options: {\n        Migraine: \"valjean\",\n        \"Tension-type headache\": \"fantine\",\n        \"Cluster headache\": \"cosette\",\n        Meningitis: \"marius\",\n        \"Subarachnoid haemorrhage\": \"eponine\",\n        \"Epidural haemorrhage\": \"thenadier\",\n        \"Subdural haemorrhage\": \"azelma\",\n        \"Temporal arteritis\": \"javert\",\n        \"Idiopathic intracranial hypertension\": \"enjolras\",\n        \"Medication-overuse headache\": \"gavroche\",\n        \"Brain tumour\": \"myriel\",\n        \"Carotid dissection\": \"grantaire\",\n        Sinusitis: \"combeferre\",\n        Encephalitis: \"courfeyrac\"\n    },\n    numHitsRequired: 10,\n}\n\nexport const case3 = {\n    stationTitle: \"Zhang Wen\",\n    stemText: \"Zhang Wen is a 67 year old man who has come in with a headache.\",\n    patient: [\n  \"Sort of all over the head, but hard to localise (where)\",\n  \"when: two days ago\",\n  \"has not happened before\",\n  \"quality: excruciating, sharp, piercing, pulsating\",\n  \"quantity, rate out of 10, severity: 7/10\",\n  \"alleviating (relieving, better): nothing\",\n  \"aggravating (exacerbating, worse): lights, photophobic, photophobia\",\n  \"past medical history (past history) of ITP, high blood pressure / hypertension\",\n  \"asplenia / splenectomy / spleen removed\",\n  \"beliefs: I think I have the flu\",\n  \"concerns: Is it contagious?\",\n  \"fever / temperature / 38.2 celsius / febrile\",\n  \"sick contacts: my baby daughter was sick last week, I don't know with what though\",\n  \"I was born in China, I do not know my immunisations / vaccination / vaccines / immunised\",\n  \"family: father had high blood pressure\",\n  \"petechial rash on trunk\",\n  \"nausea\",\n    \"vomiting\",\n    \"neck stiff (neck stiffness)\",\n  \"kernig sign positive\",\n  \"brudzinski sign positive\",\n  \"very tired/lethargic/confused/confusion/altered mental status\",\n  \"live in crowded house with extended family\"\n],\n    options: {\n        Migraine: \"aang\",\n        \"Tension-type headache\": \"zuko\",\n        \"Cluster headache\": \"katara\",\n        Meningitis: \"sokka\",\n        \"Subarachnoid haemorrhage\": \"iroh\",\n        \"Epidural haemorrhage\": \"azula\",\n        \"Subdural haemorrhage\": \"toph\",\n        \"Temporal arteritis\": \"kuvira\",\n        \"Idiopathic intracranial hypertension\": \"korra\",\n        \"Medication-overuse headache\": \"mako\",\n        \"Brain tumour\": \"bolin\",\n        \"Carotid dissection\": \"asami\",\n        Sinusitis: \"tenzin\",\n        Encephalitis: \"zaheer\"\n    },\n    numHitsRequired: 12\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DoneIcon from '@material-ui/icons/Done';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport update from 'react-addons-update';\nimport {case0, case1, case2, case3} from \"./cases\"\nimport Grid from '@material-ui/core/Grid';\nimport \"./styles.css\";\n\nclass ItemList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.makeSubheader = this.makeSubheader.bind(this)\n    }\n\n    makeItem (item) {\n        return (\n            <ListItem key={item}>\n                <ListItemIcon>\n                    {this.props.icon}\n                </ListItemIcon>\n                <ListItemText primary={item} />\n            </ListItem>\n        )\n    }\n\n    makeSubheader() {\n        return (\n            <ListSubheader>{this.props.subheader}</ListSubheader>\n        )\n    }\n\n    render () {\n        return (\n            <List\n                dense\n                subheader={this.makeSubheader()}\n            >\n                {this.props.items.map(this.makeItem.bind(this))}\n            </List>\n        )\n    }\n}\n\nclass ShowOptionList extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    if (this.props.numHits >= this.props.numHitsRequired) {\n      return (\n        <OptionList\n          itemObject={this.props.options}\n          handleClick={this.props.handleClick}\n        />\n      );\n    } else {\n      return <p>You do not have enough hits. </p>;\n    }\n  }\n}\n\nArray.prototype.diff = function(a) {\n  return this.filter(function(i) {\n    return a.indexOf(i) < 0;\n  });\n};\n\nclass OptionList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  renderListItem(key, index) {\n    return (\n      <ListItem\n        button\n        key={key}\n        onClick={() => this.props.handleClick(this.props.itemObject[key])}\n      >\n        <ListItemText\n          primary={key}\n          secondary={\"Codeword: \" + this.props.itemObject[key]}\n        />\n      </ListItem>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Your options and their codewords are:</h2>\n        <List>\n          {Object.keys(this.props.itemObject).map(\n            this.renderListItem.bind(this)\n          )}\n        </List>\n      </div>\n    );\n  }\n}\n\nclass MainFrame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hits: [],\n      attempts: [],\n      input: \"\",\n        invalidInput: true,\n        stationTitle: this.props.case.stationTitle,\n        stemText: this.props.case.stemText,\n        patient: this.props.case.patient,\n        options: this.props.case.options,\n        numHitsRequired: this.props.case.numHitsRequired,\n        stationNo: this.props.stationNo,\n    };\n      this.notifyHits = () => toast.info(\"You've got enough hits! Scroll down to see the options and select one.\");\n  }\n\n    onChangeText(e) {\n    this.setState({ input: e.target.value });\n    if (e.target.value.length > 3) {\n      this.setState({ invalidInput: false });\n    } else {\n      this.setState({ invalidInput: true });\n    }\n  }\n\n  onEnterText(e) {\n    e.preventDefault();\n    if (this.state.input.length > 3) {\n      var all_hits = this.state.patient.filter(a =>\n        a.toLowerCase().includes(this.state.input.toLowerCase())\n      );\n      var current_hits = all_hits.filter(x => !this.state.hits.includes(x));\n      if (current_hits.length > 0) {\n        this.setState(prevState => ({\n          hits: [...prevState.hits, ...current_hits],\n          attempts: [...prevState.attempts, this.state.input]\n        }));\n          if (this.state.hits.length == (this.state.numHitsRequired - 1)) {\n              this.notifyHits()\n          }\n      } else {\n        this.setState(prevState => ({\n            attempts: [...prevState.attempts, this.state.input]\n        }));\n      }\n        this.setState({ input: \"\" });\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"main-frame\">\n            <page>\n                <div className=\"stem\">\n                    <h1>CANDIDATE INSTRUCTIONS</h1>\n                    <div className=\"contact\">\n                        jwu202 at student.monash.edu for questions. Feedback appreciated!\n                    </div>\n                    <br />\n                    <br />\n                    <div className=\"details\">\n                        <b>Station No: </b> {this.state.stationNo}\n                        <br />\n                        <b>Station Title: </b> {this.state.stationTitle} <br />\n                        <b>Station Time: </b> Unlimited :) <br />\n                    </div>\n                    <br />\n                    <p>{this.state.stemText}</p>\n                    <b>TASKS:</b>\n                    <ol>\n                        <li>\n                            Achieve {this.state.numHitsRequired} hits and gather enough\n                            information to come to a diagnosis!\n                        </li>\n                    </ol>\n                    <b>IMPORTANT NOTES:</b>\n                    <br />\n                    <ul>\n                        <li>\n                            <b>DO NOT</b> change tabs until you have completed this case -\n                            you will lose all your information! Only change tabs once you\n                            have been presented with your options and selected one - then\n                            it's okay.\n                        </li>\n                        <li>\n                            Input any HoPC questions, symptoms, risk factors, or examination\n                            findings you would like to know.\n                        </li>\n                        <li>\n                            Where possible, use the most\n                            succinct descriptor (e.g. \"dyspnoea\" instead of\n                            shortness of breath).\n                        </li>\n                        <li>\n                            Your inputs need to be a minimum of <b> 4 characters</b>.\n                        </li>\n                        <li>\n                            Inputs should be medical terminology for a <b>specific </b>\n                            finding, symptom or risk factor.\n                        </li>\n                        <li>\n                            Once you have achieved <b>{this.state.numHitsRequired} hits</b>,\n           you will be presented with options, and the corresponding\n      codeword. Click your option and the tab name will change to the\n      codeword. Then progress to the next tab, or, if this is Station\n      4, send your list of 4 codewords to the live chat!\n                        </li>\n                    </ul>\n                </div>\n                <div>\n                    <form onSubmit={this.onEnterText.bind(this)}>\n                        <TextField\n                            value={this.state.input}\n                            error={this.state.invalidInput}\n                            onChange={this.onChangeText.bind(this)}\n                        >\n                            Test{\" \"}\n                        </TextField>\n                        <Button\n                            onClick={this.onEnterText.bind(this)}\n                            onKeyPress={ev => {\n                                    if (ev.key === \"Enter\") {\n                                        this.onEnterText.bind(this);\n                                        ev.preventDefault();\n                                    }\n                            }}\n                        >\n                            Check\n                        </Button>\n                    </form>\n                </div>\n                <br />\n                <div>\n                    {this.state.hits.length >= this.state.numHitsRequired\n                     ? \"You have options! Scroll down below.\"\n                     : \"You have \" + this.state.hits.length + \" hits.\"}\n                </div>\n                <br />\n\n                <br />\n                <hr />\n                <div className=\"results\">\n                    <Grid container spacing={8}>\n                        <Grid item xs={12} md={6}>\n                            <ItemList subheader=\"Hits\" items={this.state.hits} icon={<DoneIcon />}></ItemList>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <ItemList subheader=\"Attempts\" items={this.state.attempts} icon={<SearchIcon />}> </ItemList>\n                        </Grid>\n                    </Grid>\n                </div>\n                <hr />\n                <div className=\"options>\">\n                    <ShowOptionList\n                        handleClick={this.props.handleClick}\n                        numHitsRequired={this.state.numHitsRequired}\n                        options={this.state.options}\n                        numHits={this.state.hits.length}\n                    />\n                </div>\n            </page>\n        </div>\n);\n  }\n}\n\nclass App extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            caseArray: [0, 1, 2, 3],\n            dones: [false, false, false, false],\n            codewords: [\"\", \"\", \"\", \"\"],\n            cases: [case0, case1, case2, case3]\n        }\n        this.notifyDone = () => toast.info(\"Scroll up and go to the next tab/case or if this is the last case, post your codewords in the chat!\");\n        this.makeTab = this.makeTab.bind(this)\n        this.makeFrame = this.makeFrame.bind(this)\n        this.handleClicks = [this.handleClick.bind(this, 0),\n                             this.handleClick.bind(this, 1),\n                             this.handleClick.bind(this, 2),\n                             this.handleClick.bind(this, 3)\n        ]\n    }\n\n\n    handleClick(num, word) {\n        console.log(num)\n        this.setState({\n            dones: update(this.state.dones, {[num]: {$set: 'true'}}),\n            codewords: update(this.state.codewords, {[num]: {$set: word}})\n        })\n        this.notifyDone()\n    }\n\n    makeTab(num) {\n        return (\n            <Tab key={num.toString()}>\n                {this.state.dones[num]\n                 ? this.state.codewords[num].toUpperCase()\n                 : this.state.cases[num].stationTitle}\n            </Tab>\n        )\n    }\n\n    makeFrame(num) {\n        return (\n            <TabPanel key={num.toString()}>\n                <MainFrame\n                    case={this.state.cases[num]}\n                    stationNo={num + 1}\n                    handleClick={this.handleClicks[num]}\n                />\n            </TabPanel>\n        )\n    }\n\n    render() {\n    return (\n        <div className=\"App\">\n            <ToastContainer autoClose={8000} />\n            <Tabs>\n                <TabList>\n                    {this.state.caseArray.map(a => this.makeTab(a))}\n                </TabList>\n\n                {this.state.caseArray.map(a => this.makeFrame(a))}\n\n            </Tabs>\n        </div>\n    );\n    }\n}\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}